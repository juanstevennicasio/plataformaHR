// Prisma schema for plataformaHR

generator client {
  provider = "prisma-client-js"
  // usa el engine Node-API (por defecto); estable y r√°pido
  engineType = "library"
  // binarios para Linux comunes en CI/containers
  binaryTargets = ["native", "debian-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Department {
  id    Int    @id @default(autoincrement())
  name  String
  employees Employee[]
}

model Employee {
  id            Int       @id @default(autoincrement())
  fullName      String
  cedula        String    @unique
  dateOfHire    DateTime
  dateOfBirth   DateTime
  departmentId  Int?
  department    Department? @relation(fields: [departmentId], references: [id])
  loans         Loan[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Loan {
  id               Int       @id @default(autoincrement())
  employeeId       Int
  employee         Employee  @relation(fields: [employeeId], references: [id])
  principal        Float
  annualRate       Float
  method           String
  totalInstallments Int
  installments     LoanInstallment[]
  createdAt        DateTime @default(now())
}

model LoanInstallment {
  id         Int      @id @default(autoincrement())
  loanId     Int
  loan       Loan     @relation(fields: [loanId], references: [id])
  number     Int
  capital    Float
  interest   Float
  total      Float
  paid       Boolean @default(false)
}

model Config {
  id    Int    @id @default(1)
  data  Json
}
